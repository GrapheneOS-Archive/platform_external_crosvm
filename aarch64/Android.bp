// This file is generated by cargo2android.py --run --device --tests --dependencies --global_defaults=crosvm_defaults --add_workspace.

rust_defaults {
    name: "aarch64_defaults",
    defaults: ["crosvm_defaults"],
    crate_name: "aarch64",
    srcs: ["src/lib.rs"],
    test_suites: ["general-tests"],
    auto_gen_config: true,
    edition: "2018",
    rustlibs: [
        "libarch",
        "libbase_rust",
        "libdata_model",
        "libdevices",
        "libhypervisor",
        "libkernel_cmdline",
        "libkvm",
        "libkvm_sys",
        "liblibc",
        "libminijail_rust",
        "libresources",
        "libsync_rust",
        "libvm_control",
        "libvm_memory",
    ],
    proc_macros: [
        "libremain",
    ],
    target: {
        // It is necessary to disable this specifically as well as the arch below, because
        // crosvm_defaults enables it and the more specific target apparently takes precedence over
        // the less specific arch.
        linux_glibc_x86_64: {
            enabled: false,
        },
    },
    arch: {
        x86_64: {
            enabled: false,
        },
    },
}

rust_test_host {
    name: "aarch64_host_test_src_lib",
    defaults: ["aarch64_defaults"],
}

rust_test {
    name: "aarch64_device_test_src_lib",
    defaults: ["aarch64_defaults"],
}

rust_library {
    name: "libaarch64",
    defaults: ["crosvm_defaults"],
    host_supported: true,
    crate_name: "aarch64",
    srcs: ["src/lib.rs"],
    edition: "2018",
    rustlibs: [
        "libarch",
        "libbase_rust",
        "libdata_model",
        "libdevices",
        "libhypervisor",
        "libkernel_cmdline",
        "libkvm",
        "libkvm_sys",
        "liblibc",
        "libminijail_rust",
        "libresources",
        "libsync_rust",
        "libvm_control",
        "libvm_memory",
    ],
    proc_macros: [
        "libremain",
    ],
    target: {
        // It is necessary to disable this specifically as well as the arch below, because
        // crosvm_defaults enables it and the more specific target apparently takes precedence over
        // the less specific arch.
        linux_glibc_x86_64: {
            enabled: false,
        },
    },
    arch: {
        x86_64: {
            enabled: false,
        },
    },
}

// dependent_library ["feature_list"]
//   ../../adhd/audio_streams/src/audio_streams.rs
//   ../../adhd/cras/client/cras-sys/src/lib.rs
//   ../../adhd/cras/client/libcras/src/libcras.rs
//   ../../minijail/rust/minijail-sys/lib.rs
//   ../../minijail/rust/minijail/src/lib.rs
//   ../acpi_tables/src/lib.rs
//   ../arch/src/lib.rs
//   ../assertions/src/lib.rs
//   ../base/src/lib.rs
//   ../bit_field/bit_field_derive/bit_field_derive.rs
//   ../bit_field/src/lib.rs
//   ../cros_async/src/lib.rs
//   ../data_model/src/lib.rs
//   ../devices/src/lib.rs
//   ../disk/src/disk.rs
//   ../enumn/src/lib.rs
//   ../hypervisor/src/lib.rs
//   ../io_uring/src/lib.rs
//   ../kernel_cmdline/src/kernel_cmdline.rs
//   ../kvm/src/lib.rs
//   ../kvm_sys/src/lib.rs
//   ../linux_input_sys/src/lib.rs
//   ../msg_socket/msg_on_socket_derive/msg_on_socket_derive.rs
//   ../msg_socket/src/lib.rs
//   ../net_sys/src/lib.rs
//   ../net_util/src/lib.rs
//   ../p9/src/lib.rs
//   ../p9/wire_format_derive/wire_format_derive.rs
//   ../rand_ish/src/lib.rs
//   ../resources/src/lib.rs
//   ../sync/src/lib.rs
//   ../sys_util/poll_token_derive/poll_token_derive.rs
//   ../sys_util/src/lib.rs
//   ../syscall_defines/src/lib.rs
//   ../tempfile/src/lib.rs
//   ../usb_sys/src/lib.rs
//   ../usb_util/src/lib.rs
//   ../vfio_sys/src/lib.rs
//   ../vhost/src/lib.rs
//   ../virtio_sys/src/lib.rs
//   ../vm_control/src/lib.rs
//   ../vm_memory/src/lib.rs
//   async-trait-0.1.41
//   bitflags-1.2.1 "default"
//   futures-0.3.5 "alloc,async-await,default,executor,futures-executor,std"
//   futures-channel-0.3.5 "alloc,futures-sink,sink,std"
//   futures-core-0.3.5 "alloc,std"
//   futures-executor-0.3.5 "std"
//   futures-io-0.3.5 "std"
//   futures-macro-0.3.5
//   futures-sink-0.3.5 "alloc,std"
//   futures-task-0.3.5 "alloc,once_cell,std"
//   futures-util-0.3.5 "alloc,async-await,async-await-macro,channel,futures-channel,futures-io,futures-macro,futures-sink,io,memchr,proc-macro-hack,proc-macro-nested,sink,slab,std"
//   libc-0.2.78 "default,std"
//   memchr-2.3.3 "default,std"
//   once_cell-1.4.1 "std"
//   paste-1.0.1
//   pin-project-0.4.25
//   pin-project-internal-0.4.25
//   pin-utils-0.1.0
//   pkg-config-0.3.18
//   proc-macro-hack-0.5.18
//   proc-macro-nested-0.1.6
//   proc-macro2-1.0.24 "default,proc-macro"
//   quote-1.0.7 "default,proc-macro"
//   remain-0.2.2
//   slab-0.4.2
//   syn-1.0.42 "clone-impls,default,derive,full,parsing,printing,proc-macro,quote,visit-mut"
//   unicode-xid-0.2.1 "default"
